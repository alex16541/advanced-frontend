.Button {
    padding: 8px 16px;

    border: 1px solid transparent;
    border-radius: var(--border-radius-xl);

    transition: var(--transition);
    transition-duration: var(--transition-duration);

    &:disabled {
        cursor: auto;
        opacity: 0.5;
    }

    .body {
        position: relative;
    }

    .content {
        display: flex;
        align-items: center;
    }

    .loader {
        position: absolute;
        top: 0;
        left: 0;

        width: 100%;
        height: 100%;
    }
}

@media (pointer: fine) {
    .Button:not(:disabled):hover {
        &.primary {
            border-color: var(--accent-color-redesigned);
        }

        &.secondary {
            border-color: var(--accent-color-redesigned);
        }

        &.transparent {
            border-color: var(--accent-color-redesigned);
        }

        &.clear {
            opacity: 0.8;
        }
    }
}

.primary {
    color: var(--text-color-redesigned);
    background-color: var(--light-gb-color-redesigned);
    border-color: transparent;
}

.secondary {
    color: var(--text-color-redesigned);
    background-color: var(--dark-gb-color-redesigned);
    border-color: transparent;
}

.transparent {
    color: var(--text-color-redesigned);
    background-color: transparent;
    border-color: transparent;
}

.outlined {
    color: var(--primary-color);
    background-color: transparent;
    border-color: var(--primary-color);

    &:not(:disabled):hover {
        color: var(--contrast-color);
        background-color: var(--secondary-bg-color);
        border-color: var(--secondary-bg-color);
    }
}

.clear {
    margin: 0;
    padding: 0;
    color: inherit;
    background-color: transparent;
}

.s {
    font: var(--font-s-redesigned);
}

.m {
    font: var(--font-m-redesigned);
}

.l {
    font: var(--font-l-redesigned);
}

.xl {
    font: var(--font-xl-redesigned);
}

.red.primary {
    color: var(--dark-color);
    background-color: var(--cancel-color-redesigned);
    border-color: var(--dark-color);
}

.red.outlined {
    color: var(--cancel-color-redesigned);
    border-color: var(--cancel-color-redesigned);

    &:not(:disabled):hover {
        color: var(--dark-color);
        background-color: var(--cancel-color-redesigned);
    }
}

.loading {
    .content {
        opacity: 0;
    }
}

.start {
    .content {
        justify-content: flex-start;
    }
}

.center {
    .content {
        justify-content: center;
    }
}

.end {
    .content {
        justify-content: flex-end;
    }
}
